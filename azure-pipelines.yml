trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'mirzzie/docker-app'  # Docker Hub image repo
  containerName: 'sampleapp'       # Name of the running container on AWS

stages:
  - stage: Build
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            inputs:
              command: build
              repository: $(imageName)
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)
          - task: Docker@2
            inputs:
              command: push
              repository: $(imageName)
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: 'Deploy to AWS Server'
    jobs:
      - job: Deploy
        steps:
          - task: UseSSH@0
            inputs:
              sshEndpoint: 'aws'  # Replace with your SSH service connection name
              runOptions: 'inline'
              inline: |
                # Stop the running container if it exists
                docker stop $(containerName) || true
                docker rm $(containerName) || true

                # Pull the latest image from Docker Hub
                docker pull $(imageName):$(Build.BuildId)

                # Run the new container with the latest image
                docker run -d --name $(containerName) -p 80:80 $(imageName):$(Build.BuildId)


trigger:
  branches:
    include:
      - main

pool:
  name: 'Docker-App'

variables:
  imageName: 'mirzzie/docker-app'
  containerName: 'sampleapp'
  DeployUser: $(user)
  DeployServerIP: $(ip)
  privateKey: $(key)

stages:
  - stage: Build
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerRegistry'  # Adjust to your Docker registry name
              command: build
              repository: $(imageName)
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)

          - task: Docker@2
            inputs:
              containerRegistry: 'DockerRegistry'  # Adjust to your Docker registry name
              command: push
              repository: $(imageName)
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: 'Deploy to AWS Docker Application EC2'
    jobs:
      - job: Deploy
        steps:
         - script: |
            echo "Deploying to AWS Docker Application Server..."

             # Configure SSH key for deployment
            mkdir -p ~/key
            echo "$privateKey" > ~/key/key.pem
            chmod 600 ~/key/key.pem

             # Start SSH agent and add the key
            eval $(ssh-agent -s)
            ssh-add ~/key/key.pem

             # Add Docker server's host key to known_hosts
            ssh-keyscan -H $(DeployServerIP) >> ~/.ssh/known_hosts
 
             # Deploy Docker container on AWS
            ssh -i ~/key/key.pem "$(DeployUser)"@"$(DeployServerIP)" << EOF
              docker stop $(containerName) || true
              docker rm $(containerName) || true
              docker pull $(imageName):$(Build.BuildId)
              docker run -d --name $(containerName) -p 80:80 $(imageName):$(Build.BuildId)
            EOF
           displayName: 'Deploy Docker Container to AWS Docker Application EC2'



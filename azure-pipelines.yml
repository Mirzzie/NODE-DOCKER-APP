trigger:
  branches:
    include:
      - main

pool:
  name: 'Docker-App'

variables:
  imageName: 'mirzzie/docker-app'
  containerName: 'sampleapp'
  DeployUser: $(user)
  DeployServerIP: $(ip)

stages:
  - stage: Build
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerRegistry'  # Adjust to your Docker registry name
              command: build
              repository: $(imageName)
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)

          - task: Docker@2
            inputs:
              containerRegistry: 'DockerRegistry'  # Adjust to your Docker registry name
              command: push
              repository: $(imageName)
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: 'Deploy to AWS Docker Application EC2'
    jobs:
      - job: Deploy
        steps:
          - task: DownloadSecureFile@1
            inputs:
              secureFile: 'KEY.pem'  # Name of your uploaded secure file
            name: privateKey

          - script: |
              echo "Deploying to AWS Docker Application Server..."

               # Set up SSH key from downloaded secure file
              mkdir -p ~/.ssh
              cp $(privateKey.secureFilePath) ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa

               # Add Docker server's host key to known_hosts
              ssh-keyscan -H "$(DeployServerIP)" >> ~/.ssh/known_hosts

               # Deploy Docker container on AWS
              ssh -i ~/.ssh/id_rsa "$(DeployUser)"@"$(DeployServerIP)" << EOF
                docker stop $(containerName) || true
                docker rm $(containerName) || true
                docker pull $(imageName):$(Build.BuildId)
                docker run -d --name $(containerName) -p 80:80 $(imageName):$(Build.BuildId)
              EOF
            displayName: 'Deploy Docker Container to AWS Docker Application EC2'
